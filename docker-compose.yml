version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - my_network

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="kafka_user" password="kafka_password";
    ports:
      - "9092:9092"
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7.0
    container_name: redis
    environment:
      REDIS_PASSWORD: "redis_password"
    ports:
      - "6379:6379"
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  app:
    build:
      context: . # Certifique-se de que o Dockerfile está no mesmo diretório do docker-compose.yml
    volumes:
      - .:/usr/src/app # Volume mapeado para garantir que o código da máquina local seja refletido dentro do container
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
    command: yarn start # Substitua se necessário pela configuração do seu aplicativo
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      KAFKA_USER: kafka_user
      KAFKA_PASSWORD: kafka_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
    networks:
      - my_network
    dns:
      - 8.8.8.8
      - 8.8.4.4

networks:
  my_network:
    name: sistema_cache_my_network
